services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=visitor_system_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  visitor_system:
    build: .
    command: bash -lc "gunicorn visitor_system.asgi:application -k uvicorn.workers.UvicornWorker -w 2 -b 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=visitor_system.conf.dev
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=visitor_system_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_CACHE_URL=redis://redis:6379/1
      # Секреты передаём из .env/.secrets, а не хардкодим
      - DJANGO_SECRET_KEY
      - IIN_ENCRYPTION_KEY

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - visitor_system
    volumes:
      - ./visitor_system/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./visitor_system/staticfiles:/app/visitor_system/staticfiles:ro
      - ./visitor_system/media:/app/visitor_system/media:ro
      - ./visitor_system/nginx/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"

  celery-worker:
    build: .
    command: bash -lc "celery -A visitor_system worker -l info"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=visitor_system.conf.dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=visitor_system_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SECRET_KEY
      - IIN_ENCRYPTION_KEY

  celery-beat:
    build: .
    command: bash -lc "celery -A visitor_system beat -l info"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=visitor_system.conf.dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=visitor_system_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SECRET_KEY
      - IIN_ENCRYPTION_KEY

  flower:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -lc "celery -A visitor_system flower --broker=redis://redis:6379/0 --port=5555"
    environment:
      - DJANGO_SETTINGS_MODULE=visitor_system.conf.dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=visitor_system_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SECRET_KEY
      - IIN_ENCRYPTION_KEY
    ports:
      - "5555:5555"

volumes:
  postgres_data:
  redis_data: