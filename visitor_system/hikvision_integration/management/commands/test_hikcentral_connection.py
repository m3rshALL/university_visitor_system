from django.core.management.base import BaseCommand
from hikvision_integration.models import HikCentralServer
from hikvision_integration.services import test_hikcentral_connection


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º HikCentral Professional'

    def handle(self, *args, **options):
        servers = HikCentralServer.objects.filter(enabled=True)
        
        if not servers.exists():
            self.stdout.write(self.style.WARNING("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ HikCentral –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."))
            self.stdout.write("\nüí° –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–µ—Ä HikCentral –∫–æ–º–∞–Ω–¥–æ–π: python manage.py setup_hikcentral")
            return

        self.stdout.write("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–∞–º HikCentral Professional...\n")
        
        success_count = 0
        total_count = servers.count()
        
        for server in servers:
            self.stdout.write(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {server.name} ({server.base_url})...")
            
            result = test_hikcentral_connection(server)
            
            if result['status'] == 'success':
                self.stdout.write(
                    self.style.SUCCESS(
                        f"‚úì {server.name} - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ\n"
                        f"  URL: {result['base_url']}\n"
                        f"  –í–µ—Ä—Å–∏—è: {result['version']}\n"
                        f"  –°–±–æ—Ä–∫–∞: {result['build_time']}"
                    )
                )
                success_count += 1
            else:
                self.stdout.write(
                    self.style.ERROR(
                        f"‚úó {server.name} - –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result['error']}"
                    )
                )
            
            self.stdout.write("")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stdout.write("=" * 50)
        self.stdout.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {success_count}/{total_count} —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã")
        
        if success_count == total_count:
            self.stdout.write(self.style.SUCCESS("‚úì –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã HikCentral –¥–æ—Å—Ç—É–ø–Ω—ã!"))
        elif success_count > 0:
            self.stdout.write(self.style.WARNING(f"‚ö† –ß–∞—Å—Ç–∏—á–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã: {total_count - success_count} —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"))
        else:
            self.stdout.write(self.style.ERROR("‚úó –ù–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä HikCentral –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"))
        
        self.stdout.write("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        if success_count > 0:
            self.stdout.write("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Celery worker –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á")
            self.stdout.write("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ HIK_WEBHOOK_SECRET –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            self.stdout.write("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≥–æ—Å—Ç—è —Å FaceID")
        else:
            self.stdout.write("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL —Å–µ—Ä–≤–µ—Ä–∞ HikCentral –≤ –∞–¥–º–∏–Ω–∫–µ")
            self.stdout.write("2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ Integration Partner Key/Secret")
            self.stdout.write("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ HikCentral –∏–∑ –≤–∞—à–µ–π —Å–µ—Ç–∏")
            self.stdout.write("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä HikCentral –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
