#!/usr/bin/env python
"""Test direct ISAPI photo upload to devices (bypassing HCP)"""
import os
import sys
import django

# Setup Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'visitor_system.settings')
django.setup()

from hikvision_integration.models import HikDevice, HikCentralServer
from hikvision_integration.services import HikSession, upload_face_isapi
from visitors.models import Guest

print("=" * 80)
print("üî¨ Testing Direct ISAPI Photo Upload (Bypassing HCP)")
print("=" * 80)

# Check if we have any devices configured
devices = HikDevice.objects.all()
print(f"\nüìã Found {devices.count()} Hikvision devices in database:")

if devices.count() == 0:
    print("\n‚ùå No Hikvision devices configured!")
    print("\nüí° To test ISAPI direct upload, you need to:")
    print("   1. Add HikDevice in Django admin")
    print("   2. Configure device IP, username, password")
    print("   3. Ensure device has Face Library enabled")
    print("\n‚ö†Ô∏è  This method works ONLY if:")
    print("   ‚Ä¢ Devices have direct IP access (not only via HCP)")
    print("   ‚Ä¢ Devices support ISAPI")
    print("   ‚Ä¢ Devices are not locked by HCP management")
    sys.exit(0)

for device in devices:
    print(f"\n   Device: {device.name}")
    print(f"   Host: {device.host}:{device.port}")
    print(f"   Enabled: {device.enabled}")
    print(f"   Primary: {device.is_primary}")

# Use test photo directly
test_photo_path = r"D:\university_visitor_system\visitor_system\media\guest_photos\pavel.jpg"

print(f"\n‚úì Using test photo: {test_photo_path}")

if not os.path.exists(test_photo_path):
    print(f"‚ùå Photo file not found!")
    print(f"   Please ensure test photo exists at: {test_photo_path}")
    sys.exit(1)
    
with open(test_photo_path, 'rb') as f:
    image_bytes = f.read()
print(f"‚úì Photo size: {len(image_bytes)} bytes")

# Get test person ID
test_person_id = "190"  # Guest ID as person ID
print(f"‚úì Test person ID: {test_person_id}")

print("\n" + "=" * 80)
print("üß™ Testing ISAPI Upload to Each Device")
print("=" * 80)

for device in devices:
    if not device.enabled:
        print(f"\n‚è≠Ô∏è  Skipping disabled device: {device.name}")
        continue
        
    print(f"\nüì° Testing device: {device.name} ({device.host}:{device.port})")
    
    try:
        # Create ISAPI session
        session = HikSession(device)
        print(f"   ‚úì Session created")
        
        # Test if device is accessible
        try:
            test_response = session.get('/ISAPI/System/deviceInfo')
            if test_response.status_code == 200:
                print(f"   ‚úì Device accessible via ISAPI")
            else:
                print(f"   ‚ö†Ô∏è  Device returned status {test_response.status_code}")
                continue
        except Exception as e:
            print(f"   ‚ùå Cannot connect to device: {e}")
            continue
        
        # Try to upload photo
        print(f"\n   üîÑ Attempting photo upload via ISAPI...")
        
        # upload_face_isapi(device, person_code, image_bytes) -> bool
        result = upload_face_isapi(device, test_person_id, image_bytes)
        print(f"   üìä Upload result: {result}")
        
        if "error" not in result.lower() and "status" not in result.lower():
            print(f"   ‚úÖ Photo uploaded successfully to {device.name}!")
            print(f"\nüí° ISAPI direct upload WORKS for this device!")
            print(f"   This can be used as alternative to HCP API")
        else:
            print(f"   ‚ö†Ô∏è  Upload returned: {result}")
            
    except Exception as e:
        print(f"   ‚ùå Failed: {e}")
        import traceback
        traceback.print_exc()

print("\n" + "=" * 80)
print("üìù Summary and Recommendations")
print("=" * 80)

print("""
If ISAPI direct upload works:
‚úÖ You can use direct device integration (bypass HCP API)
   Pros:
   ‚Ä¢ No HCP version limitation
   ‚Ä¢ Direct control over devices
   ‚Ä¢ Faster response
   
   Cons:
   ‚Ä¢ Need to manage each device separately
   ‚Ä¢ No centralized management via HCP
   ‚Ä¢ May conflict with HCP if both try to manage same device
   
If ISAPI direct upload fails:
‚ùå Options:
   1. Update HCP to newer version (RECOMMENDED)
   2. Manual photo upload via HCP UI
   3. Contact Hikvision support

Current setup analysis:
‚Ä¢ HCP API: ‚ùå Not working (old version)
‚Ä¢ ISAPI Direct: ‚ö†Ô∏è  Test results above
‚Ä¢ Manual Upload: ‚úÖ Always works
""")

print("\n" + "=" * 80)
print("üéØ Final Answer to '–ù—É–∂–Ω–∞ –ª–∏—Ü–µ–Ω–∑–∏—è –ø–æ–∫—É–ø–∞—Ç—å?'")
print("=" * 80)
print("""
–ù–ï–¢, –ª–∏—Ü–µ–Ω–∑–∏—é –ø–æ–∫—É–ø–∞—Ç—å –ù–ï –Ω—É–∂–Ω–æ!

–ü—Ä–æ–±–ª–µ–º–∞ –ù–ï –≤ –ª–∏—Ü–µ–Ω–∑–∏–∏, –∞ –≤ –≤–µ—Ä—Å–∏–∏ HikCentral Professional.

–†–µ—à–µ–Ω–∏—è (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞):

1. üîÑ –û–ë–ù–û–í–ò–¢–¨ HCP (Best option)
   ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–û
   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ API
   ‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è

2. üîß ISAPI Direct (If devices accessible)
   ‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ –≤—ã—à–µ
   ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–±—Ö–æ–¥ HCP
   ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤

3. üë§ Manual Upload (Current)
   ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞
   ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã
   ‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ

‚ùå –õ–∏—Ü–µ–Ω–∑–∏—è –ù–ï —Ä–µ—à–∏—Ç –ø—Ä–æ–±–ª–µ–º—É - —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞!
‚úÖ –ù—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ü–û HCP –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ISAPI –Ω–∞–ø—Ä—è–º—É—é
""")
