"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–∑–∏—Ç–∞ —Å –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.

–®–∞–≥–∏:
1. –°–æ–∑–¥–∞—ë—Ç Guest –≤ Django
2. –°–æ–∑–¥–∞—ë—Ç Visit –≤ Django
3. –°–æ–∑–¥–∞—ë—Ç person –≤ HikCentral
4. –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ
5. –ù–∞–∑–Ω–∞—á–∞–µ—Ç access level
6. –ü–æ–º–µ—á–∞–µ—Ç visit.access_granted=True
"""

import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'visitor_system.conf.dev')
django.setup()

from django.utils import timezone
from datetime import timedelta, datetime
from visitors.models import Guest, Visit, EmployeeProfile
from hikvision_integration.services import (
    HikCentralSession,
    ensure_person_hikcentral,
    upload_face_hikcentral,
    assign_access_level_to_person
)
from django.conf import settings


def create_test_visit_with_access():
    """–°–æ–∑–¥–∞—ë—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –≤–∏–∑–∏—Ç —Å –¥–æ—Å—Ç—É–ø–æ–º"""
    
    print("\n" + "="*80)
    print("–°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –í–ò–ó–ò–¢–ê –° –î–û–°–¢–£–ü–û–ú")
    print("="*80 + "\n")
    
    # 1. –°–æ–∑–¥–∞—ë–º Guest –≤ Django (–µ—Å–ª–∏ –Ω–µ—Ç)
    print("1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Å—Ç—è –≤ Django...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º timestamp –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    timestamp = int(datetime.now().timestamp())
    
    guest, created = Guest.objects.get_or_create(
        full_name=f"Test Monitoring {timestamp}",
        defaults={
            'email': f'test.monitoring{timestamp}@example.com',
            'phone_number': '+77001112233',
        }
    )
    
    if created:
        print(f"‚úÖ Guest —Å–æ–∑–¥–∞–Ω: {guest.full_name} (ID={guest.id})")
    else:
        print(f"‚úÖ Guest –Ω–∞–π–¥–µ–Ω: {guest.full_name} (ID={guest.id})")
    
    # 2. –ù–∞—Ö–æ–¥–∏–º Employee –¥–ª—è –≤–∏–∑–∏—Ç–∞
    print("\n2Ô∏è‚É£ –ü–æ–∏—Å–∫ Employee –¥–ª—è –≤–∏–∑–∏—Ç–∞...")
    
    from django.contrib.auth.models import User
    
    user = User.objects.filter(is_active=True, is_staff=True).first()
    if not user:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ")
        return
    
    print(f"‚úÖ User –Ω–∞–π–¥–µ–Ω: {user.get_full_name()} (ID={user.id})")
    
    # 3. –°–æ–∑–¥–∞—ë–º Visit
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∞ –≤ Django...")
    
    from departments.models import Department
    
    # –ù–∞—Ö–æ–¥–∏–º –ª—é–±–æ–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç
    department = Department.objects.first()
    if not department:
        print("‚ùå –ù–µ—Ç –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ")
        return
    
    now = timezone.now()
    
    visit, created = Visit.objects.get_or_create(
        guest=guest,
        employee=user,
        defaults={
            'purpose': '–¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ö–æ–¥–æ–≤',
            'department': department,
            'registered_by': user,
            'expected_entry_time': now,
            'status': 'EXPECTED',
        }
    )
    
    if created:
        print(f"‚úÖ Visit —Å–æ–∑–¥–∞–Ω (ID={visit.id})")
    else:
        print(f"‚úÖ Visit –Ω–∞–π–¥–µ–Ω (ID={visit.id})")
    
    # 4. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ HikCentral
    print("\n4Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ HikCentral...")
    
    from hikvision_integration.models import HikCentralServer
    
    server = HikCentralServer.objects.filter(enabled=True).first()
    if not server:
        print("‚ùå HikCentral Server –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return
    
    session = HikCentralSession(server)
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ HikCentral")
    
    # 5. –°–æ–∑–¥–∞—ë–º person –≤ HikCentral
    print("\n5Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ person –≤ HikCentral...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º timestamp –∫–∞–∫ employee_no –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    employee_no = str(timestamp)
    
    person_id = ensure_person_hikcentral(
        session,
        employee_no=employee_no,
        name=guest.full_name,
        valid_from=now.isoformat(),
        valid_to=(now.replace(hour=22, minute=0, second=0)).isoformat()
    )
    
    if not person_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å person –≤ HikCentral")
        return
    
    print(f"‚úÖ Person —Å–æ–∑–¥–∞–Ω: ID={person_id}, Employee No={employee_no}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º person_id –≤ Visit
    visit.hikcentral_person_id = person_id
    visit.save(update_fields=['hikcentral_person_id'])
    print(f"   ‚úÖ Person ID —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ Visit")
    
    # 6. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ
    print("\n6Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞
    photo_path = os.path.join(
        os.path.dirname(__file__),
        'test_photos',
        'test_face.jpg'
    )
    
    if not os.path.exists(photo_path):
        print(f"‚ö†Ô∏è  –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {photo_path}")
        print("   –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ...")
    else:
        result = upload_face_hikcentral(session, person_id, photo_path)
        
        if result and result.get('code') == 0:
            print(f"‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: picUri={result.get('data', {}).get('picUri', 'N/A')}")
        else:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ: {result}")
    
    # 7. –ù–∞–∑–Ω–∞—á–∞–µ–º access level
    print("\n7Ô∏è‚É£ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ access level...")
    
    access_group_id = getattr(settings, 'HIKCENTRAL_GUEST_ACCESS_GROUP_ID', '7')
    
    success = assign_access_level_to_person(
        session,
        str(person_id),
        str(access_group_id),
        access_type=1
    )
    
    if not success:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å access level")
        return
    
    print(f"‚úÖ Access level –Ω–∞–∑–Ω–∞—á–µ–Ω (group_id={access_group_id})")
    
    # 8. –ü–æ–º–µ—á–∞–µ–º visit.access_granted=True
    print("\n8Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–∑–∏—Ç–∞...")
    
    visit.access_granted = True
    visit.status = 'CHECKED_IN'
    visit.save(update_fields=['access_granted', 'status'])
    
    print(f"‚úÖ Visit.access_granted = True")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print("\n" + "="*80)
    print("‚úÖ –¢–ï–°–¢–û–í–´–ô –í–ò–ó–ò–¢ –°–û–ó–î–ê–ù –£–°–ü–ï–®–ù–û!")
    print("="*80)
    print(f"\nüìã –î–µ—Ç–∞–ª–∏:")
    print(f"   Guest ID: {guest.id}")
    print(f"   Visit ID: {visit.id}")
    print(f"   HikCentral Person ID: {person_id}")
    print(f"   Employee No: {employee_no}")
    print(f"   Access Group ID: {access_group_id}")
    print(f"\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ:")
    print(f"   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: poetry run python test_monitoring_task.py")
    print(f"   2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤—Ä—É—á–Ω—É—é: poetry run python test_run_monitoring_task.py")
    print(f"   3. –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≥–æ—Å—Ç—è —á–µ—Ä–µ–∑ —Ç—É—Ä–Ω–∏–∫–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ–±–ª–æ–∫–∏—Ä–æ–≤–∫—É")
    print()


if __name__ == '__main__':
    create_test_visit_with_access()
