# Generated by Django 5.2.1 on 2025-05-27 13:24

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, unique=True, verbose_name='Номер аудитории')),
                ('floor', models.IntegerField(verbose_name='Этаж')),
                ('building', models.CharField(max_length=50, verbose_name='Корпус')),
                ('capacity', models.IntegerField(blank=True, null=True, verbose_name='Вместимость')),
                ('features', models.TextField(blank=True, verbose_name='Особенности')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
                'ordering': ['building', 'floor', 'number'],
            },
        ),
        migrations.CreateModel(
            name='ClassroomKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_number', models.CharField(max_length=20, unique=True, verbose_name='Номер ключа')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keys', to='classroom_book.classroom', verbose_name='Аудитория')),
            ],
            options={
                'verbose_name': 'Ключ',
                'verbose_name_plural': 'Ключи',
            },
        ),
        migrations.CreateModel(
            name='KeyBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(verbose_name='Время начала')),
                ('end_time', models.DateTimeField(verbose_name='Время окончания')),
                ('purpose', models.CharField(max_length=255, verbose_name='Цель')),
                ('status', models.CharField(choices=[('reserved', 'Забронирован'), ('issued', 'Выдан'), ('returned', 'Возвращен'), ('expired', 'Просрочен'), ('cancelled', 'Отменен')], default='reserved', max_length=20, verbose_name='Статус')),
                ('is_returned', models.BooleanField(default=False, verbose_name='Возвращен')),
                ('returned_at', models.DateTimeField(blank=True, null=True, verbose_name='Время возврата')),
                ('is_cancelled', models.BooleanField(default=False, verbose_name='Отменен')),
                ('qr_code_token', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Токен QR-кода')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='classroom_book.classroom', verbose_name='Аудитория')),
                ('key', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='classroom_book.classroomkey', verbose_name='Ключ')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_bookings', to=settings.AUTH_USER_MODEL, verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Бронирование ключа',
                'verbose_name_plural': 'Бронирования ключей',
                'ordering': ['-start_time'],
            },
        ),
    ]
