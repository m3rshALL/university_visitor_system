# Generated by Django 5.2.1 on 2025-08-19 09:04

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('visitors', '0030_remove_guest_iin'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('visitors_count', 'Количество посетителей'), ('active_visits', 'Активные визиты'), ('today_registrations', 'Регистрации за сегодня'), ('avg_visit_duration', 'Средняя длительность визита'), ('department_stats', 'Статистика по департаментам'), ('hourly_stats', 'Почасовая статистика'), ('security_alerts', 'Предупреждения безопасности')], max_length=50, verbose_name='Тип метрики')),
                ('value', models.JSONField(help_text='JSON данные с метрикой', verbose_name='Значение метрики')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время записи')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная метрика')),
            ],
            options={
                'verbose_name': 'Метрика дашборда',
                'verbose_name_plural': 'Метрики дашборда',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', 'timestamp'], name='realtime_da_metric__310f29_idx'), models.Index(fields=['is_active'], name='realtime_da_is_acti_85e25d_idx')],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название виджета')),
                ('widget_type', models.CharField(choices=[('counter', 'Счетчик'), ('chart_line', 'Линейный график'), ('chart_bar', 'Столбчатый график'), ('chart_pie', 'Круговая диаграмма'), ('table', 'Таблица'), ('map', 'Карта'), ('activity_feed', 'Лента активности'), ('alert_list', 'Список предупреждений')], max_length=30, verbose_name='Тип виджета')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('config', models.JSONField(default=dict, help_text='JSON настройки виджета', verbose_name='Конфигурация виджета')),
                ('position_x', models.IntegerField(default=0, verbose_name='Позиция X')),
                ('position_y', models.IntegerField(default=0, verbose_name='Позиция Y')),
                ('width', models.IntegerField(default=4, verbose_name='Ширина (в колонках)')),
                ('height', models.IntegerField(default=3, verbose_name='Высота (в строках)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('refresh_interval', models.IntegerField(default=30, verbose_name='Интервал обновления (секунды)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Виджет дашборда',
                'verbose_name_plural': 'Виджеты дашборда',
                'ordering': ['position_y', 'position_x'],
                'indexes': [models.Index(fields=['is_active'], name='realtime_da_is_acti_48545b_idx'), models.Index(fields=['position_y', 'position_x'], name='realtime_da_positio_e7cff7_idx')],
            },
        ),
        migrations.CreateModel(
            name='RealtimeEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('visit_created', 'Новый визит'), ('visit_checked_in', 'Посетитель вошел'), ('visit_checked_out', 'Посетитель вышел'), ('visit_cancelled', 'Визит отменен'), ('security_alert', 'Предупреждение безопасности'), ('system_alert', 'Системное уведомление')], max_length=50, verbose_name='Тип события')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('normal', 'Обычный'), ('high', 'Высокий'), ('critical', 'Критический')], default='normal', max_length=20, verbose_name='Приоритет')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок события')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='Дополнительные данные')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Связанный пользователь')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='visitors.visit', verbose_name='Связанный визит')),
            ],
            options={
                'verbose_name': 'Событие в реальном времени',
                'verbose_name_plural': 'События в реальном времени',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'created_at'], name='realtime_da_event_t_0a7468_idx'), models.Index(fields=['priority'], name='realtime_da_priorit_0cc0f9_idx'), models.Index(fields=['is_read'], name='realtime_da_is_read_dadfa9_idx')],
            },
        ),
    ]
