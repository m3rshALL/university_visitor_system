# Generated by Django 5.2.1 on 2025-08-19 08:12

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('visitors', '0030_remove_guest_iin'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentVerification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('iin', 'ИИН'), ('passport', 'Паспорт'), ('driving_license', 'Водительские права'), ('birth_certificate', 'Свидетельство о рождении')], max_length=20, verbose_name='Тип документа')),
                ('document_number', models.CharField(max_length=255, verbose_name='Номер документа (зашифровано)')),
                ('status', models.CharField(choices=[('pending', 'Ожидает проверки'), ('verified', 'Проверен'), ('failed', 'Ошибка проверки'), ('invalid', 'Недействительный документ'), ('expired', 'Просрочен')], default='pending', max_length=20, verbose_name='Статус проверки')),
                ('egov_response', models.JSONField(blank=True, null=True, verbose_name='Ответ от egov.kz')),
                ('verified_data', models.JSONField(blank=True, null=True, verbose_name='Проверенные данные')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время запроса')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Время проверки')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Сообщение об ошибке')),
                ('retry_count', models.IntegerField(default=0, verbose_name='Количество повторов')),
                ('guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_verifications', to='visitors.guest', verbose_name='Гость')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Запросил проверку')),
            ],
            options={
                'verbose_name': 'Проверка документа',
                'verbose_name_plural': 'Проверки документов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EgovAPILog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=10)),
                ('endpoint', models.CharField(max_length=500, verbose_name='Конечная точка')),
                ('request_data', models.JSONField(blank=True, null=True, verbose_name='Данные запроса')),
                ('response_status', models.IntegerField(verbose_name='HTTP статус ответа')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='Данные ответа')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время запроса')),
                ('response_time_ms', models.IntegerField(blank=True, null=True, verbose_name='Время ответа (мс)')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='api_logs', to='egov_integration.documentverification', verbose_name='Связанная проверка')),
            ],
            options={
                'verbose_name': 'Лог API egov.kz',
                'verbose_name_plural': 'Логи API egov.kz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EgovSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название настройки')),
                ('value', models.TextField(verbose_name='Значение')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_encrypted', models.BooleanField(default=False, verbose_name='Зашифровано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Обновил')),
            ],
            options={
                'verbose_name': 'Настройка egov.kz',
                'verbose_name_plural': 'Настройки egov.kz',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='documentverification',
            index=models.Index(fields=['status'], name='egov_integr_status_0405c1_idx'),
        ),
        migrations.AddIndex(
            model_name='documentverification',
            index=models.Index(fields=['document_type'], name='egov_integr_documen_75d13a_idx'),
        ),
        migrations.AddIndex(
            model_name='documentverification',
            index=models.Index(fields=['created_at'], name='egov_integr_created_46864b_idx'),
        ),
        migrations.AddIndex(
            model_name='egovapilog',
            index=models.Index(fields=['response_status'], name='egov_integr_respons_bfe8d7_idx'),
        ),
        migrations.AddIndex(
            model_name='egovapilog',
            index=models.Index(fields=['created_at'], name='egov_integr_created_bcca22_idx'),
        ),
        migrations.AddIndex(
            model_name='egovapilog',
            index=models.Index(fields=['endpoint'], name='egov_integr_endpoin_51a56c_idx'),
        ),
    ]
