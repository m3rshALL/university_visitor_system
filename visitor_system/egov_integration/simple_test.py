#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ egov.kz
"""

import requests
import json

def test_egov_connection():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ egov.kz"""
    
    api_key = "b1f82af3b06e4db1a0841d03146cf2ea"
    base_url = "https://data.egov.kz/api/v4"
    
    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ egov.kz")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞–ª–∞
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞–ª–∞...")
    try:
        response = requests.get("https://data.egov.kz", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   ‚úì –ü–æ—Ä—Ç–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω" if response.status_code == 200 else f"   ‚úó –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ—Ä—Ç–∞–ª–æ–º")
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å –∫–ª—é—á–æ–º
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å –∫–ª—é—á–æ–º...")
    try:
        url = f"{base_url}/health?apiKey={api_key}"
        response = requests.get(url, timeout=10)
        print(f"   URL: {url}")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("   ‚úì API –¥–æ—Å—Ç—É–ø–µ–Ω")
            try:
                data = response.json()
                print(f"   –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
            except:
                print(f"   –û—Ç–≤–µ—Ç (text): {response.text[:200]}...")
        else:
            print(f"   ‚úó –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ datasets
    print("\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
    try:
        url = f"{base_url}/datasets?apiKey={api_key}"
        response = requests.get(url, timeout=10)
        print(f"   URL: {url}")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                if isinstance(data, list):
                    print(f"   ‚úì –ù–∞–π–¥–µ–Ω–æ {len(data)} –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö")
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    for i, dataset in enumerate(data[:3]):
                        if isinstance(dataset, dict):
                            name = dataset.get('name', dataset.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'))
                            print(f"   - {name}")
                else:
                    print(f"   –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)[:300]}...")
            except:
                print(f"   –û—Ç–≤–µ—Ç (text): {response.text[:300]}...")
        else:
            print(f"   ‚úó –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            
    except Exception as e:
        print(f"   ‚úó –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ï—Å–ª–∏ –ø–æ—Ä—Ç–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("2. –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞")
    print("3. –ò–∑—É—á–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: https://data.egov.kz/pages/samples")


if __name__ == '__main__':
    test_egov_connection()
